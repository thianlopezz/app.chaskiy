name: Deploy Chaskiy App

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
#2
env:
  REGISTRY: '652076466280.dkr.ecr.us-east-2.amazonaws.com'
  IMAGE_NAME: 'app-chaskiy'
  AWS_REGION: 'us-east-2'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build_and_push:
    name: Build and push to AWS Elastic Container Registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          envs: AWS_REGION
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7) .
          docker push $ECR_REGISTRY/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7)

  deploy:
    name: Deploy on AWS  EC2 servers
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,AWS_SECRET_ACCESS_KEY,AWS_ACCESS_KEY_ID,AWS_REGION
          script: |
            # Login to AWS CLI and ECR registry
            AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REGISTRY
            # Get latest codebase version
            cd /home/ubuntu/traefik-as-a-reverse-proxy/apps/app.chaskiy
            git reset --hard
            git pull origin main
            # Down and up composer
            IMAGE_URL=$(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) docker-compose down
            IMAGE_URL=$(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) docker-compose up -d
